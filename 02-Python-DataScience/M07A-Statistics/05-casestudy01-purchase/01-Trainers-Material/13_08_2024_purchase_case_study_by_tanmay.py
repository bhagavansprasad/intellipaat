# -*- coding: utf-8 -*-
"""13-08-2024  purchase case study by Tanmay.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HwE5ua9ETjuPg1u4CLwxShmAgOE89BQY

# **Purchase Case Study**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

data=pd.read_csv('/content/purchase_data.csv')

data

data.info()

data["Stay_In_Current_City_Years"].unique()

data["Stay_In_Current_City_Years"]=data["Stay_In_Current_City_Years"].replace("4+",4)

data["Stay_In_Current_City_Years"].unique()

data["Stay_In_Current_City_Years"]=pd.to_numeric(data["Stay_In_Current_City_Years"],error="coerce")

data["Stay_In_Current_City_Years"].unique()

data.info()

data.isnull().sum()

data["Product_Category_2"].fillna(0,inplace=True)
data["Product_Category_3"].fillna(0,inplace=True)

data.isnull().sum()

data.isnull().sum().sum()

data.dropna(inplace=True)

data.isnull().sum()

data.duplicated().sum()

data.columns



for col in data.columns:
  if data[col].dtype!="object":
    data[col]=data[col].astype(int)

data

# label Encoding

from sklearn.preprocessing import LabelEncoder

le=LabelEncoder()

for col in data.columns:
  if data[col].dtype=="object":
    data[col]=le.fit_transform(data[col])
    print(le.classes_)

data



"""# **Statistical Analysis -  Hypothesis Testing**"""

#Steps of Hypothisis Testing

    #collecting the data
    #Creating the samples
    #Generate Hypothesis
    #choose suitable Hypothesis Test
    #Find P-value
    #Make Decision bases on P-value

"""# It was observed that the average purchase made by the Men of the age 18-25 was 10000. Is it still the same?"""

#collecting the data
new_data = data[(data['Age'] == 1) & data['Gender'] == 1]
new_data

new_data["Purchase"].mean()

#Creating the samples
 sample = new_data.sample(3600, random_state=5)
 sample



#Generate Hypothesis
# null hypothesis= average purchase will be equals to 10000
# alternate hypothesis= average purchase  will not be equal to 10000

#choose suitable Hypothesis Test
# One sample t test
from scipy.stats import ttest_1samp
a_mean=10000

t_stat, p_value = ttest_1samp(sample['Purchase'], a_mean)
print(t_stat, p_value)

# As the pvalue<0.05:
# rejecting null hypothesis
# accepting alternate hypothesis
# mean will not be equal to 10000

"""# Is the percentage of men who have spent more than 10000 the same for the ages 18-25 and 26-35?"""

#null hypothesis - Percentage of the men in the age groups is same
#alternate hypothesis - Percentage of the men in the age groups is not same

data_age1 = data[(data['Age'] == 1) & (data['Purchase'] > 10000)]
data_age2 = data[(data['Age'] == 2) & (data['Purchase'] > 10000)]





